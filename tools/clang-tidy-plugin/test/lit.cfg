import sys
import os
import lit.formats

config.name = 'clang-tidy-cata'
config.test_format = lit.formats.ShTest(True)
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = os.path.join(
        config.plugin_build_root, 'test')

config.suffixes = ['.cpp', '.h']

if config.cata_check_clang_tidy:
    check_clang_tidy = config.cata_check_clang_tidy
else:
    check_clang_tidy = os.path.join(
            config.plugin_build_root, 'clang-tidy-plugin-support', 'bin',
            'check_clang_tidy.py')

check_clang_tidy += ' -std=c++14'

# Note: backlash (`\`) in the path seems to cause it to not work properly
# on Windows, therefore the relative path should start with `./` and use `/`
# to delimit directories instead of using multiple arguments to `os.path.join`.
cata_include = os.path.join( config.cata_source_dir, "./src" )
test_include = os.path.join( config.cata_source_dir, "./tools/clang-tidy-plugin/test-include" )

if config.cata_clang_tidy_executable == "ON":
    cata_plugin = ''
else:
    cata_plugin = os.path.join(
            config.plugin_build_root, 'libCataAnalyzerPlugin.so')

config.substitutions.append(('%check_clang_tidy', check_clang_tidy))
config.substitutions.append(('%cata_include', cata_include))
config.substitutions.append(('%test_include', test_include))
config.substitutions.append(('%cata_plugin', cata_plugin))
