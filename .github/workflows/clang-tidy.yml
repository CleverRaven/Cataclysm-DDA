name: Clang-tidy 16

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

# We only care about the latest revision of a PR, so cancel all previous instances.
concurrency:
  group: clang-tidy-build-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  skip-duplicates:
    continue-on-error: true
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          paths: '[ "**.cpp", "**.h", "**.c", "**/CMakeLists.txt", "**/Makefile", "**.hpp", "**.cmake", ".github/workflows/clang-tidy.yml" ]'
  build-plugin:
    needs: skip-duplicates
    if: ${{ needs.skip-duplicates.outputs.should_skip != 'true' }}

    name: "Build clang-tidy plugin"
    runs-on: ubuntu-22.04
    env:
        CC: clang-16
        CXX: clang++-16
        CLANG_DIR: '/usr/lib/llvm-16/lib/cmake/clang'
        LLVM_DIR: '/usr/lib/llvm-16/lib/cmake/llvm'
    steps:
    - name: install LLVM 16
      run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
          sudo apt update
          sudo apt install llvm-16 llvm-16-dev llvm-16-tools clang-16 clang-tidy-16 clang-tools-16 libclang-16-dev
    - name: install dependencies
      run: |
          sudo apt install python3-pip libncursesw5-dev ninja-build cmake gettext
          pip3 install --user lit
    - name: ensure clang-tidy and FileCheck commands point to LLVM 16
      run: |
          mkdir ~/llvm-command-override
          ln -s /usr/bin/clang-tidy-16 ~/llvm-command-override/clang-tidy
          ln -s /usr/bin/FileCheck-16 ~/llvm-command-override/FileCheck
          echo "$HOME/llvm-command-override" >> $GITHUB_PATH
    - name: checkout repository
      uses: actions/checkout@v3
    - name: build clang-tidy plugin
      run: |
          cmake -B build -D CMAKE_BUILD_TYPE=Release \
                         -D CATA_CLANG_TIDY_PLUGIN=ON \
                         -D LLVM_DIR="${LLVM_DIR}" \
                         -D Clang_DIR="${CLANG_DIR}" \
                         -G Ninja
          ninja -C build libCataAnalyzerPlugin.so
    - name: test clang-tidy plugin
      run: |
          lit -v build/tools/clang-tidy-plugin/test
    - name: cache clang-tidy plugin
      uses: actions/cache@v3
      with:
        path: ~/cata-clang-tidy-plugin
        key: cata-clang-tidy-plugin
    - name: copy clang-tidy plugin
      run: |
        cp build/tools/clang-tidy-plugin/libCataAnalyzerPlugin.so ~/cata-clang-tidy-plugin

  check:
    needs: build-plugin
    if: ${{ needs.skip-duplicates.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - title: Check main
            filter: "/src/"
          - title: Check tests
            filter: "/tests/"
    name: "Run clang-tidy checks"
    runs-on: ubuntu-22.04
    env:
        CC: clang-16
        CXX: clang++-16
    steps:
    - name: install LLVM 16
      run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
          sudo apt update
          sudo apt install llvm-16 llvm-16-dev llvm-16-tools clang-16 clang-tidy-16 clang-tools-16 libclang-16-dev
    - name: install dependencies
      run: |
          sudo apt update
          sudo apt install libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev libpulse-dev gettext \
                           cmake ninja-build parallel jq
    - name: checkout
      uses: actions/checkout@v3
    - name: configure cmake
      run: |
          cmake -B build -D CMAKE_BUILD_TYPE=Release \
                         -D CMAKE_EXPORT_COMPILE_COMMANDS=ON \
                         -D TILES=ON \
                         -D SOUND=ON \
                         -G Ninja
    - name: determine scope of files to be checked
      run: |
          jq --arg pwd $(pwd) --arg filter "/src/" \
             '[.[].file] | map(sub($pwd; ".")) | map(select(. | contains($filter))) | join(" ")' \
             build/compile_commands.json > files
    - name: cache clang-tidy plugin
      uses: actions/cache@v3
      with:
        path: ~/cata-clang-tidy-plugin
        key: cata-clang-tidy-plugin
    - name: ensure clang-tidy plugin exists
      run: |
        file ~/cata-clang-tidy-plugin/libCataAnalyzerPlugin.so
    - name: run clang-tidy in src
      run: |
          parallel --linebuffer --keep-order \
            clang-tidy -p build --checks="-*,cata-*" --use-color --quiet \
            --load=~/cata-clang-tidy-plugin/libCataAnalyzerPlugin.so \
             ::: $(cat files)